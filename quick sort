#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
int partition(int arr[], int lb, int ub)
{ int pivot = arr[lb];
int start = lb; int
end = ub; while
(start < end)
{ while (arr[start] <= pivot)
{
start++;
} while (arr[end] >
pivot)
{ end--; } if
(start < end)
{ swap(arr[start], arr[end]);
}
} swap(arr[lb],
arr[end]); return end;
} void quicksort(int arr[], int lb, int ub)
{
if (lb < ub)
{ int loc = partition(arr, lb, ub); cout
<< lb << " " << loc-1 << endl;
quicksort(arr, lb, loc-1); cout <<
loc+1 << " " << ub << endl;
quicksort(arr, loc+1, ub);
}
}
int main()

{ int n; cin >> n; int
arr[n]; for (int i = 0; i <
n; i++)
{ cin >> arr[i]; }
quicksort(arr, 0, n-1);
cout << arr[0]; for (int i
= 1; i < n; i++)
{ cout << " " <<
arr[i];
} return
0;
}
